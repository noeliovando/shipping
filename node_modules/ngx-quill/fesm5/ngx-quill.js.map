{"version":3,"file":"ngx-quill.js.map","sources":["ng://ngx-quill/src/quill-defaults.ts","ng://ngx-quill/src/quill-editor.interfaces.ts","ng://ngx-quill/src/quill-editor.component.ts","ng://ngx-quill/src/quill.module.ts"],"sourcesContent":["export const defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: [] },\n      { background: [] }\n    ], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n","import { InjectionToken } from '@angular/core'\n\nexport type QuillToolbarConfig = Array<Array<\n  string | {\n    indent?: string\n    list?: string\n    direction?: string\n    header?: number | Array<boolean | number>\n    color?: string[]\n    background?: string[]\n    align?: string[]\n    script?: string\n    font?: string[]\n    size?: Array<boolean | string>\n  }\n>>\n\nexport interface QuillModules {\n  [key: string]: any\n  clipboard?: {\n    mathers?: any[]\n    matchVisual?: boolean\n  } |Â boolean\n  history?: {\n    delay?: number\n    maxStack?: number\n    userOnly?: boolean\n  } |Â boolean\n  keyboard?: {\n    bindings?: any\n  } | boolean\n  syntax?: boolean\n  toolbar?: QuillToolbarConfig |Â string |Â {\n    container?: string | string[] | QuillToolbarConfig\n    handlers?: {\n      [key: string]: any\n    }\n  } |Â boolean\n}\n\nexport interface QuillConfig {\n  bounds?: HTMLElement |Â string\n  debug?: 'error' | 'warn' | 'log' |Â false\n  formats?: any\n  modules?: QuillModules\n  placeholder?: string\n  readOnly?: boolean\n  scrollingContainer?: HTMLElement |Â string |Â null\n  theme?: string\n  // Custom Config to track all changes or only changes by 'user'\n  trackChanges?: 'user' | 'all'\n}\n\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config')\n","import { isPlatformServer } from '@angular/common'\nimport { DomSanitizer } from '@angular/platform-browser'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig, QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator\n} from '@angular/forms'\n\nimport { DOCUMENT } from '@angular/common'\nimport { defaultModules } from './quill-defaults'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare var require: any\n// tslint:disable-next-line:variable-name\nlet Quill: any = null\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\nexport interface Range {\n  index: number\n  length: number\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n})\nexport class QuillEditorComponent\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  quillEditor: any\n  editorElem: HTMLElement | undefined\n  content: any\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json' = 'html'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' |Â 'log' |Â 'error' |Â false\n  @Input() readOnly?: boolean\n  @Input() placeholder?: string\n  @Input() maxLength?: number\n  @Input() minLength?: number\n  @Input() required: boolean = false\n  @Input() formats?: string[] |Â null\n  @Input() customToolbarPosition: 'top' |Â 'bottom' = 'top'\n  @Input() sanitize: boolean = false\n  @Input() style: any = null\n  @Input() strict: boolean = true\n  @Input() scrollingContainer?: HTMLElement | string | null\n  @Input() bounds?: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n  @Input() trackChanges?: 'user' |Â 'all'\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<{\n    content: any\n    delta: any\n    editor: any\n    html: string | null\n    oldDelta: any\n    source: string\n    text: string\n  }> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<{\n    editor: any\n    oldRange: Range | null\n    range: Range |Â null\n    source: string\n  }> = new EventEmitter()\n\n  private disabled = false // used to store initial value before ViewInit\n\n  constructor(\n    private elementRef: ElementRef,\n    private domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private doc: any,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  // tslint:disable-next-line:no-empty\n  onModelChange(_modelValue?: any) {}\n  // tslint:disable-next-line:no-empty\n  onModelTouched() {}\n\n  @Input()\n  valueGetter = (quillEditor: any, editorElement: HTMLElement): string | anyÂ  => {\n    let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br><div>') {\n      html = null\n    }\n    let modelValue = html\n\n    if (this.format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (this.format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (this.format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: any, value: any): any => {\n    if (this.format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (this.format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      Quill = require('quill')\n    }\n\n    if (this.customToolbarPosition === 'top') {\n      this.elementRef.nativeElement.insertAdjacentHTML(\n        'beforeend',\n        '<div quill-editor-element></div>'\n      )\n    } else {\n      this.elementRef.nativeElement.insertAdjacentHTML(\n        'afterbegin',\n        '<div quill-editor-element></div>'\n      )\n    }\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-element]'\n    )\n\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-toolbar]'\n    )\n    const modules = this.modules || (this.config.modules ||Â defaultModules)\n    if (modules.toolbar === undefined) {\n      modules.toolbar = defaultModules.toolbar\n    }\n\n    let placeholder = this.placeholder !== undefined ? this.placeholder : this.config.placeholder\n    if (placeholder === undefined) {\n      placeholder = 'Insert text here ...'\n    }\n\n    if (toolbarElem) {\n      // tslint:disable-next-line:no-string-literal\n      modules['toolbar'] = toolbarElem\n    }\n\n    if (this.style) {\n      Object.keys(this.style).forEach((key: string) => {\n        this.renderer.setStyle(this.editorElem, key, this.style[key])\n      })\n    }\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds\n    if (!bounds) {\n      bounds = this.config.bounds ? this.config.bounds : this.doc.body\n    }\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let readOnly = this.readOnly\n    if (!readOnly && this.readOnly !== false) {\n      readOnly = this.config.readOnly !== undefined ? this.config.readOnly : false\n    }\n\n    let scrollingContainer = this.scrollingContainer\n    if (!scrollingContainer && this.scrollingContainer !== null) {\n      scrollingContainer = this.config.scrollingContainer === null ||Â this.config.scrollingContainer ? this.config.scrollingContainer : null\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ||Â this.config.formats === null ? this.config.formats : undefined\n    }\n\n    this.quillEditor = new Quill(this.editorElem, {\n      bounds,\n      debug,\n      formats,\n      modules,\n      placeholder,\n      readOnly,\n      scrollingContainer,\n      strict: this.strict,\n      theme: this.theme || (this.config.theme ? this.config.theme : 'snow')\n    })\n\n    if (this.content) {\n      if (this.format === 'object') {\n        this.quillEditor.setContents(this.content, 'silent')\n      } else if (this.format === 'text') {\n        this.quillEditor.setText(this.content, 'silent')\n      } else if (this.format === 'json') {\n        try {\n          this.quillEditor.setContents(JSON.parse(this.content), 'silent')\n        } catch (e) {\n          this.quillEditor.setText(this.content, 'silent')\n        }\n      } else {\n        if (this.sanitize) {\n          this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content)\n        }\n        const contents = this.quillEditor.clipboard.convert(this.content)\n        this.quillEditor.setContents(contents, 'silent')\n      }\n\n      this.quillEditor.history.clear()\n    }\n\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState()\n\n    this.onEditorCreated.emit(this.quillEditor)\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on(\n      'selection-change',\n      this.selectionChangeHandler\n    )\n\n    // update model if text changes\n    this.quillEditor.on(\n      'text-change',\n      this.textChangeHandler\n    )\n  }\n\n  selectionChangeHandler = (range: Range |Â null, oldRange: Range | null, source: string) => {\n    this.zone.run(() => {\n      this.onSelectionChanged.emit({\n        editor: this.quillEditor,\n        oldRange,\n        range,\n        source\n      })\n\n      if (!range && this.onModelTouched) {\n        this.onModelTouched()\n      }\n    })\n  }\n\n  textChangeHandler = (delta: any, oldDelta: any, source: string): void => {\n    // only emit changes emitted by user interactions\n\n    const text = this.quillEditor.getText()\n    const content = this.quillEditor.getContents()\n\n    let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br><div>') {\n      html = null\n    }\n\n    this.zone.run(() => {\n      const trackChanges = this.trackChanges ||Â this.config.trackChanges\n      if ((source === Quill.sources.USER || trackChanges && trackChanges === 'all') && this.onModelChange) {\n        this.onModelChange(\n          this.valueGetter(this.quillEditor, this.editorElem!)\n        )\n      }\n\n      this.onContentChanged.emit({\n        content,\n        delta,\n        editor: this.quillEditor,\n        html,\n        oldDelta,\n        source,\n        text\n      })\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.quillEditor) {\n      this.quillEditor.off('selection-change', this.selectionChangeHandler)\n      this.quillEditor.off('text-change', this.textChangeHandler)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    // tslint:disable:no-string-literal\n    if (changes['readOnly']) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue)\n    }\n    if (changes['placeholder']) {\n      this.quillEditor.root.dataset.placeholder =\n        changes['placeholder'].currentValue\n    }\n    if (changes['style']) {\n      const currentStyling = changes['style'].currentValue\n      const previousStyling = changes['style'].previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.style[key])\n        })\n      }\n    }\n    // tslint:enable:no-string-literal\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (this.format === 'text') {\n          this.quillEditor.setText(currentValue)\n        } else {\n          this.quillEditor.setContents(\n            this.valueSetter(this.quillEditor, this.content)\n          )\n        }\n        return\n      }\n      this.quillEditor.setText('')\n    }\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: (modelValue: any) => void): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const textLength = this.quillEditor.getText().trim().length\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent\n  ],\n  exports: [QuillEditorComponent],\n  imports: [],\n  providers: [\n    {\n      provide: QUILL_CONFIG_TOKEN,\n      useValue: { modules: defaultModules }\n    }\n  ]\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: QUILL_CONFIG_TOKEN,\n          // tslint:disable-next-line:only-arrow-functions\n          useValue: config ||Â {Â modules: defaultModules }\n        }\n      ]\n    }\n  }\n}\n"],"names":[],"mappings":"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"}
